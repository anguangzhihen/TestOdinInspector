#if UNITY_EDITOR
/* THIS FILE HAS BEEN AUTOMATICALLY GENERATED. DO NOT EDIT */

//-----------------------------------------------------------------------
// <copyright file="InternalAttributeRegistry.cs" company="Sirenix IVS">
// Copyright (c) Sirenix IVS. All rights reserved.
// </copyright>
//-----------------------------------------------------------------------

namespace Sirenix.OdinInspector.Editor.Examples
{
#pragma warning disable

    using Sirenix.OdinInspector;
    using System.Collections.Generic;
    using UnityEngine;

    internal static class InternalAttributeRegistry
    {
        public static readonly List<OdinRegisterAttributeAttribute> Attributes = new List<OdinRegisterAttributeAttribute>()
        {
            new OdinRegisterAttributeAttribute(typeof(AssetListAttribute), "Type Specifics", "AssetLists is used on lists and arrays and single elements of unity types, and replaces the default list drawer with a list of all possible assets with the specified filter.\nUse this to both filter and include or exclude assets from a list or an array, without navigating the project window.", false, "https://odininspector.com/attributes/asset-list-attribute"),
            new OdinRegisterAttributeAttribute(typeof(AssetSelectorAttribute), "Type Specifics", "The AssetSelector attribute prepends a small button next to the object field that will present the user with a dropdown of assets to select from which can be customized from the attribute.", false, "https://odininspector.com/attributes/asset-selector-attribute"),
            new OdinRegisterAttributeAttribute(typeof(AssetsOnlyAttribute), "Essentials", "AssetsOnly is used on object properties, and restricts the property to project assets, and not scene objects.\nUse this when you want to ensure an object is from the project, and not from the scene.", false, "https://odininspector.com/attributes/assets-only-attribute"),
            new OdinRegisterAttributeAttribute(typeof(BoxGroupAttribute), "Groups", "BoxGroup is used on any property and organizes the property in a boxed group.\nUse this to cleanly organize relevant values together in the inspector.", false, "https://odininspector.com/attributes/box-group-attribute"),
            new OdinRegisterAttributeAttribute(typeof(ButtonAttribute), "Groups, Buttons", "Buttons are used on functions, and allows for clickable buttons in the inspector.", false, "https://odininspector.com/attributes/button-attribute"),
            new OdinRegisterAttributeAttribute(typeof(ButtonGroupAttribute), "Groups, Buttons", "ButtonGroup is used on any instance function, and adds buttons to the inspector organized into horizontal groups.\nUse this to organize multiple button in a tidy horizontal group.", false, "https://odininspector.com/attributes/button-group-attribute"),
            new OdinRegisterAttributeAttribute(typeof(ChildGameObjectsOnlyAttribute), "Type Specifics", "The ChildGameObjectsOnly attribute can be used on Components and GameObject fields and will prepend a small button next to the object-field that will search through all child gameobjects for assignable objects and present them in a dropdown for the user to choose from.", false, "https://odininspector.com/attributes/child-game-objects-only-attribute"),
            new OdinRegisterAttributeAttribute(typeof(ColorPaletteAttribute), "Type Specifics", "ColorPalette is used on any Color property, and allows for choosing colors from different definable palettes.\nUse this to allow the user to choose from a set of predefined color options.", false, "https://odininspector.com/attributes/color-palette-attribute"),
            new OdinRegisterAttributeAttribute(typeof(CustomContextMenuAttribute), "Misc", "CustomContextMenu is used on any property, and adds a custom options to the context menu for the property.\nUse this for when you want to add custom actions to the context menu of a property.", false, "https://odininspector.com/attributes/custom-context-menu-attribute"),
            new OdinRegisterAttributeAttribute(typeof(CustomValueDrawerAttribute), "Essentials", "Instead of making a new attribute, and a new drawer, for a one-time thing, you can with this attribute, make a method that acts as a custom property drawer.\nThese drawers will out of the box have support for undo/redo and multi-selection.", false, "https://odininspector.com/attributes/custom-value-drawer-attribute"),
            new OdinRegisterAttributeAttribute(typeof(DelayedPropertyAttribute), "Essentials", "Delays applying changes to properties while they still being edited in the inspector.\nSimilar to Unity's built-in Delayed attribute, but this attribute can also be applied to properties.", false, "https://odininspector.com/attributes/delayed-property-attribute"),
            new OdinRegisterAttributeAttribute(typeof(DetailedInfoBoxAttribute), "Essentials", "DetailedInfoBox is used on any property, and displays a message box that can be expanded to show more details.\nUse this to convey a message to a user, and give them the option to see more details.", false, "https://odininspector.com/attributes/detailed-info-box-attribute"),
            new OdinRegisterAttributeAttribute(typeof(DictionaryDrawerSettings), "Collections", "Customize the behavior for dictionaries in the inspector.", false, "https://odininspector.com/attributes/dictionary-drawer-settings"),
            new OdinRegisterAttributeAttribute(typeof(DisableContextMenuAttribute), "Misc", "DisableContextMenu is used on any property and disables the context menu for that property.\nUse this if you do not want the context menu to be available for a property.", false, "https://odininspector.com/attributes/disable-context-menu-attribute"),
            new OdinRegisterAttributeAttribute(typeof(DisableIfAttribute), "Conditionals", "DisableIf is used on any property, and can disable or enable the property in the inspector.\nUse this to disable properties when they are irrelevant.", false, "https://odininspector.com/attributes/disable-if-attribute"),
            new OdinRegisterAttributeAttribute(typeof(DisableInEditorModeAttribute), "Conditionals", "DisableInEditorMode is used on any property, and disables the property when not in play mode.\nUse this when you only want a property to be editable when in play mode.", false, "https://odininspector.com/attributes/disable-in-editor-mode-attribute"),
            new OdinRegisterAttributeAttribute(typeof(DisableInInlineEditorsAttribute), "Conditionals", "Disables a property if it is drawn within an <see cref=\"InlineEditorAttribute\"/>.", false, "https://odininspector.com/attributes/disable-in-inline-editors-attribute"),
            new OdinRegisterAttributeAttribute(typeof(DisableInNonPrefabsAttribute), "Conditionals", "Disables a property if it is drawn from a non-prefab asset or instance.", false, "https://odininspector.com/attributes/disable-in-non-prefabs-attribute"),
            new OdinRegisterAttributeAttribute(typeof(DisableInPlayModeAttribute), "Conditionals", "DisableInPlayMode is used on any property, and disables the property when in play mode.\nUse this to prevent users from editing a property when in play mode.", false, "https://odininspector.com/attributes/disable-in-play-mode-attribute"),
            new OdinRegisterAttributeAttribute(typeof(DisableInPrefabAssetsAttribute), "Conditionals", "Disables a property if it is drawn from a prefab asset.", false, "https://odininspector.com/attributes/disable-in-prefab-assets-attribute"),
            new OdinRegisterAttributeAttribute(typeof(DisableInPrefabInstancesAttribute), "Conditionals", "Disables a property if it is drawn from a prefab instance.", false, "https://odininspector.com/attributes/disable-in-prefab-instances-attribute"),
            new OdinRegisterAttributeAttribute(typeof(DisableInPrefabsAttribute), "Conditionals", "Disables a property if it is drawn from a prefab asset or a prefab instance.", false, "https://odininspector.com/attributes/disable-in-prefabs-attribute"),
            new OdinRegisterAttributeAttribute(typeof(DisplayAsStringAttribute), "Type Specifics", "DisplayAsString is used on any property, and displays a string in the inspector as text.\nUse this for when you want to show a string in the inspector, but not allow for any editing.", false, "https://odininspector.com/attributes/display-as-string-attribute"),
            new OdinRegisterAttributeAttribute(typeof(DrawWithUnityAttribute), "Misc", "DrawWithUnity can be applied to a field or property to make Odin draw it using Unity's old drawing system. Use it if you want to selectively disable Odin drawing for a particular member.\n\nNote that this attribute does not mean \"disable Odin completely for this property\"; it is visual only in nature, and in fact represents an Odin drawer which calls into Unity's old property drawing system. As Odin is still ultimately responsible for arranging the drawing of the property, and since other attributes exist with a higher priority than this attribute, and it is not guaranteed that Unity will draw the property if another attribute is present to override this one.", false, "https://odininspector.com/attributes/draw-with-unity-attribute"),
            new OdinRegisterAttributeAttribute(typeof(EnableGUIAttribute), "Essentials", "Enables the GUI of properties that otherwise would be disabled.", false, "https://odininspector.com/attributes/enable-guiattribute"),
            new OdinRegisterAttributeAttribute(typeof(EnableIfAttribute), "Conditionals", "EnableIf is used on any property, and can enable or disable the property in the inspector.\nUse this to enable properties when they are relevant.", false, "https://odininspector.com/attributes/enable-if-attribute"),
            new OdinRegisterAttributeAttribute(typeof(EnumPagingAttribute), "Type Specifics, Buttons", "Draws an enum selector in the inspector with next and previous buttons to let you cycle through the available values for the enum property.", false, "https://odininspector.com/attributes/enum-paging-attribute"),
            new OdinRegisterAttributeAttribute(typeof(EnumToggleButtonsAttribute), "Type Specifics, Buttons", "Draws an enum in a horizontal button group instead of a dropdown.", false, "https://odininspector.com/attributes/enum-toggle-buttons-attribute"),
            new OdinRegisterAttributeAttribute(typeof(FilePathAttribute), "Type Specifics", "FilePath is used on string properties, and provides an interface for file paths.", false, "https://odininspector.com/attributes/file-path-attribute"),
            new OdinRegisterAttributeAttribute(typeof(FolderPathAttribute), "Type Specifics", "FolderPath is used on string properties, and provides an interface for directory paths.", false, "https://odininspector.com/attributes/folder-path-attribute"),
            new OdinRegisterAttributeAttribute(typeof(FoldoutGroupAttribute), "Groups", "FoldoutGroup is used on any property, and organizes properties into a foldout.\nUse this to organize properties, and to allow the user to hide properties that are not relevant for them at the moment.", false, "https://odininspector.com/attributes/foldout-group-attribute"),
            new OdinRegisterAttributeAttribute(typeof(GUIColorAttribute), "Essentials", "GUIColor is used on any property and changes the GUI color used to draw the property.", false, "https://odininspector.com/attributes/guicolor-attribute"),
            new OdinRegisterAttributeAttribute(typeof(HideDuplicateReferenceBoxAttribute), "Misc", "Indicates that Odin should hide the reference box, if this property would otherwise be drawn as a reference to another property, due to duplicate reference values being encountered.\nNote that if the value is referencing itself recursively, then the reference box will be drawn regardless of this attribute in all recursive draw calls.", false, "https://odininspector.com/attributes/hide-duplicate-reference-box-attribute"),
            new OdinRegisterAttributeAttribute(typeof(HideIfAttribute), "Conditionals", "HideIf is used on any property and can hide the property in the inspector.\nUse this to hide irrelevant properties based on the current state of the object.", false, "https://odininspector.com/attributes/hide-if-attribute"),
            new OdinRegisterAttributeAttribute(typeof(HideIfGroupAttribute), "Groups, Conditionals", "HideIfGroup allows for showing or hiding a group of properties based on a condition.\nThe attribute is a group attribute and can therefore be combined with other group attributes, and even be used to show or hide entire groups.", false, "https://odininspector.com/attributes/hide-if-group-attribute"),
            new OdinRegisterAttributeAttribute(typeof(HideInEditorModeAttribute), "Conditionals", "HideInEditorMode is used on any property, and hides the property when not in play mode.\nUse this when you only want a property to only be visible play mode.", false, "https://odininspector.com/attributes/hide-in-editor-mode-attribute"),
            new OdinRegisterAttributeAttribute(typeof(HideInInlineEditorsAttribute), "Type Specifics", "Hides a property if it is drawn within an <see cref=\"InlineEditorAttribute\"/>.", false, "https://odininspector.com/attributes/hide-in-inline-editors-attribute"),
            new OdinRegisterAttributeAttribute(typeof(HideInNonPrefabsAttribute), "Conditionals", "Hides a property if it is drawn from a non prefab instance or asset.", false, "https://odininspector.com/attributes/hide-in-non-prefabs-attribute"),
            new OdinRegisterAttributeAttribute(typeof(HideInPlayModeAttribute), "Conditionals", "HideInPlayMode is used on any property, and hides the property when not in editor mode.\nUse this when you only want a property to only be visible the editor.", false, "https://odininspector.com/attributes/hide-in-play-mode-attribute"),
            new OdinRegisterAttributeAttribute(typeof(HideInPrefabAssetsAttribute), "Conditionals", "Hides a property if it is drawn from a prefab asset.", false, "https://odininspector.com/attributes/hide-in-prefab-assets-attribute"),
            new OdinRegisterAttributeAttribute(typeof(HideInPrefabInstancesAttribute), "Conditionals", "Hides a property if it is drawn from a prefab instance.", false, "https://odininspector.com/attributes/hide-in-prefab-instances-attribute"),
            new OdinRegisterAttributeAttribute(typeof(HideInPrefabsAttribute), "Conditionals", "Hides a property if it is drawn from a prefab instance or a prefab asset.", false, "https://odininspector.com/attributes/hide-in-prefabs-attribute"),
            new OdinRegisterAttributeAttribute(typeof(HideInTablesAttribute), "Type Specifics", "The HideInTables attribute is used to prevent members from showing up as columns in tables drawn using the <see cref=\"TableListAttribute\"/>.", false, "https://odininspector.com/attributes/hide-in-tables-attribute"),
            new OdinRegisterAttributeAttribute(typeof(HideLabelAttribute), "Essentials", "HideLabel is used on any property, and hides the label in the inspector.\nUse this to hide the label of properties in the inspector.", false, "https://odininspector.com/attributes/hide-label-attribute"),
            new OdinRegisterAttributeAttribute(typeof(HideMonoScriptAttribute), "Type Specifics", "Apply HideMonoScript to your class to prevent the Script property from being shown in the inspector.", false, "https://odininspector.com/attributes/hide-mono-script-attribute"),
            new OdinRegisterAttributeAttribute(typeof(HideNetworkBehaviourFieldsAttribute), "Type Specifics", "Apply HideNetworkBehaviourFields to your class to prevent the special \"Network Channel\" and \"Network Send Interval\" properties from being shown in the inspector for a NetworkBehaviour.\nThis attribute has no effect on classes that are not derived from NetworkBehaviour.", false, "https://odininspector.com/attributes/hide-network-behaviour-fields-attribute"),
            new OdinRegisterAttributeAttribute(typeof(HideReferenceObjectPickerAttribute), "Type Specifics", "Hides the polymorphic object-picker shown above the properties of non-Unity serialized reference types.", false, "https://odininspector.com/attributes/hide-reference-object-picker-attribute"),
            new OdinRegisterAttributeAttribute(typeof(HorizontalGroupAttribute), "Groups", "HorizontalGroup is used group multiple properties horizontally in the inspector.\nThe width can either be specified as percentage or pixels.\nAll values between 0 and 1 will be treated as a percentage.\nIf the width is 0 the column will be automatically sized.\nMargin-left and right can only be specified in pixels.", false, "https://odininspector.com/attributes/horizontal-group-attribute"),
            new OdinRegisterAttributeAttribute(typeof(IndentAttribute), "Misc", "Indent is used on any property and moves the property's label to the right.\nUse this to clearly organize properties in the inspector.", false, "https://odininspector.com/attributes/indent-attribute"),
            new OdinRegisterAttributeAttribute(typeof(InfoBoxAttribute), "Misc", "InfoBox is used on any property, and display a text box above the property in the inspector.\nUse this to add comments or warn about the use of different properties.", false, "https://odininspector.com/attributes/info-box-attribute"),
            new OdinRegisterAttributeAttribute(typeof(InlineButtonAttribute), "Buttons", "The inline button adds a button to the end of a property.", false, "https://odininspector.com/attributes/inline-button-attribute"),
            new OdinRegisterAttributeAttribute(typeof(InlineEditorAttribute), "Type Specifics", "InlineAttribute is used on any property or field with a type that inherits from UnityEngine.Object. This includes components and assets etc.", false, "https://odininspector.com/attributes/inline-editor-attribute"),
            new OdinRegisterAttributeAttribute(typeof(InlinePropertyAttribute), "Misc", "The Inline Property is used to place the contents of a type next to the label, instead of being rendered in a foldout.", false, "https://odininspector.com/attributes/inline-property-attribute"),
            new OdinRegisterAttributeAttribute(typeof(LabelTextAttribute), "Misc", "LabelText is used to change the labels of properties.\nUse this if you want a different label than the name of the property.", false, "https://odininspector.com/attributes/label-text-attribute"),
            new OdinRegisterAttributeAttribute(typeof(LabelWidthAttribute), "Misc", "LabelWidth is used to change the width of labels for properties.", false, "https://odininspector.com/attributes/label-width-attribute"),
            new OdinRegisterAttributeAttribute(typeof(ListDrawerSettingsAttribute), "Collections", "Customize the behavior for lists and arrays in the inspector.", false, "https://odininspector.com/attributes/list-drawer-settings-attribute"),
            new OdinRegisterAttributeAttribute(typeof(MaxValueAttribute), "Numbers", "MaxValue is used on primitive fields. It caps value of the field to a maximum value.\nUse this to define a maximum value for the field.", false, "https://odininspector.com/attributes/max-value-attribute"),
            new OdinRegisterAttributeAttribute(typeof(MinMaxSliderAttribute), "Numbers", "Draw a special slider the user can use to specify a range between a min and a max value.\nUses a Vector2 where x is min and y is max.", false, "https://odininspector.com/attributes/min-max-slider-attribute"),
            new OdinRegisterAttributeAttribute(typeof(MinValueAttribute), "Numbers", "MinValue is used on primitive fields. It caps value of the field to a minimum value.\nUse this to define a minimum value for the field.", false, "https://odininspector.com/attributes/min-value-attribute"),
            new OdinRegisterAttributeAttribute(typeof(MultiLinePropertyAttribute), "Type Specifics", "MultiLineProperty is used on any string property.\nUse this to allow users to edit strings in a multi line textbox.", false, "https://odininspector.com/attributes/multi-line-property-attribute"),
            new OdinRegisterAttributeAttribute(typeof(OnCollectionChangedAttribute), "Misc", "OnCollectionChanged can be put on collections, and provides an event callback when the collection is about to be changed through the inspector, and when the collection has been changed through the inspector. Additionally, it provides a CollectionChangeInfo struct containing information about the exact changes made to the collection. This attribute works for all collections with a collection resolver, amongst them arrays, lists, dictionaries, hashsets, stacks and linked lists.", false, "https://odininspector.com/attributes/on-collection-changed-attribute"),
            new OdinRegisterAttributeAttribute(typeof(OnInspectorDisposeAttribute), "Misc", "The OnInspectorDispose attribute takes in an action string as an argument (typically the name of a method to be invoked, or an expression to be executed), and executes that action when the property's drawers are disposed in the inspector.\n\nDisposing will happen at least once, when the inspector changes selection or the property tree is collected by the garbage collector, but may also happen several times before that, most often when the type of a polymorphic property changes and it refreshes its drawer setup and recreates all its children, disposing of the old setup and children.", false, "https://odininspector.com/attributes/on-inspector-dispose-attribute"),
            new OdinRegisterAttributeAttribute(typeof(OnInspectorGUIAttribute), "Misc", "OnInspectorGUI is used on any property, and will call the specified function whenever the inspector code is running.\nUse this to create custom inspector GUI for an object.", false, "https://odininspector.com/attributes/on-inspector-guiattribute"),
            new OdinRegisterAttributeAttribute(typeof(OnInspectorInitAttribute), "Misc", "The OnInspectorInit attribute takes in an action string as an argument (typically the name of a method to be invoked, or an expression to be executed), and executes that action when the property's drawers are initialized in the inspector.\n\nInitialization will happen at least once during the first drawn frame of any given property, but may also happen several times later, most often when the type of a polymorphic property changes and it refreshes its drawer setup and recreates all its children.", false, "https://odininspector.com/attributes/on-inspector-init-attribute"),
            new OdinRegisterAttributeAttribute(typeof(OnStateUpdateAttribute), "Misc", "OnStateUpdate provides an event callback when the property's state should be updated, when the StateUpdaters run on the property instance. This generally happens at least once per frame, and the callback will be invoked even when the property is not visible. This can be used to approximate custom StateUpdaters like [ShowIf] without needing to make entire attributes and StateUpdaters for one-off cases.", false, "https://odininspector.com/attributes/on-state-update-attribute"),
            new OdinRegisterAttributeAttribute(typeof(OnValueChangedAttribute), "Misc", "OnValueChanged works on properties and fields, and calls the specified function whenever the value has been changed via the inspector.", false, "https://odininspector.com/attributes/on-value-changed-attribute"),
            new OdinRegisterAttributeAttribute(typeof(PreviewFieldAttribute), "Type Specifics", "Draws a square ObjectField which renders a preview for UnityEngine.Object types.\nThis object field also adds support for drag and drop, dragging an object to another square object field, swaps the values. \nIf you hold down control while letting go it will replace the value, And you can control + click the object field to quickly delete the value it holds.", false, "https://odininspector.com/attributes/preview-field-attribute"),
            new OdinRegisterAttributeAttribute(typeof(ProgressBarAttribute), "Numbers", "Draws a horizontal progress bar based on the value of the property.\nUse it for displaying a meter to indicate how full an inventory is, or to make a visual indication of a health bar.", false, "https://odininspector.com/attributes/progress-bar-attribute"),
            new OdinRegisterAttributeAttribute(typeof(PropertyOrderAttribute), "Essentials", "PropertyOrder is used on any property, and allows for ordering of properties.\nUse this to define in which order your properties are shown.", false, "https://odininspector.com/attributes/property-order-attribute"),
            new OdinRegisterAttributeAttribute(typeof(PropertyRangeAttribute), "Numbers", "PropertyRange attribute creates a slider control to set the value of a property to between the specified range.\nThis is equivalent to Unity's Range attribute, but this attribute can be applied to both fields and property.", false, "https://odininspector.com/attributes/property-range-attribute"),
            new OdinRegisterAttributeAttribute(typeof(PropertySpaceAttribute), "Essentials", "The PropertySpace attribute have the same function as Unity's existing Space attribute, but can be applied anywhere as opposed to just fields.", false, "https://odininspector.com/attributes/property-space-attribute"),
            new OdinRegisterAttributeAttribute(typeof(PropertyTooltipAttribute), "Misc", "PropertyTooltip is used on any property, and creates tooltips for when hovering the property in the inspector.\nUse this to explain the purpose, or how to use a property.", false, "https://odininspector.com/attributes/property-tooltip-attribute"),
            new OdinRegisterAttributeAttribute(typeof(RangeAttribute), "Unity", null, false),
            new OdinRegisterAttributeAttribute(typeof(ReadOnlyAttribute), "Essentials", "ReadOnly is used on any property, and disabled the property from being changed in the inspector.\nUse this for when you want to see the value of a property in the inspector, but don't want it to be changed.", false, "https://odininspector.com/attributes/read-only-attribute"),
            new OdinRegisterAttributeAttribute(typeof(RequiredAttribute), "Essentials", "Required is used on any object property, and draws a message in the inspector if the property is missing.\nUse this to clearly mark fields as necessary to the object.", false, "https://odininspector.com/attributes/required-attribute"),
            new OdinRegisterAttributeAttribute(typeof(ResponsiveButtonGroupAttribute), "Groups, Buttons", "Groups buttons into a group that will position and resize the buttons based on the amount of available layout space.", false, "https://odininspector.com/attributes/responsive-button-group-attribute"),
            new OdinRegisterAttributeAttribute(typeof(SceneObjectsOnlyAttribute), "Type Specifics", "SceneObjectsOnly is used on object properties, and restricts the property to scene objects, and not project assets.\nUse this when you want to ensure an object is a scene object, and not from a project asset.", false, "https://odininspector.com/attributes/scene-objects-only-attribute"),
            new OdinRegisterAttributeAttribute(typeof(SearchableAttribute), "Essentials", "Adds a search filter that can search the children of the field or type on which it is applied. Note that this does not currently work when directly applied to dictionaries, though a search field \"above\" the dictionary will still search the dictionary's properties if it is searching recursively.", false, "https://odininspector.com/attributes/searchable-attribute"),
            new OdinRegisterAttributeAttribute(typeof(ShowDrawerChainAttribute), "Debug", "ShowDrawerChain lists all prepend, append and value drawers being used in the inspector.\nThis is great in situations where you want to debug, and want to know which drawers might be involved in drawing the property.", false, "https://odininspector.com/attributes/show-drawer-chain-attribute"),
            new OdinRegisterAttributeAttribute(typeof(ShowIfAttribute), "Conditionals", "ShowIf is used on any property and can hide the property in the inspector.\nUse this to hide irrelevant properties based on the current state of the object.", false, "https://odininspector.com/attributes/show-if-attribute"),
            new OdinRegisterAttributeAttribute(typeof(ShowIfGroupAttribute), "Groups, Conditionals", "ShowIfGroup allows for showing or hiding a group of properties based on a condition.\nThe attribute is a group attribute and can therefore be combined with other group attributes, and even be used to show or hide entire groups.", false, "https://odininspector.com/attributes/show-if-group-attribute"),
            new OdinRegisterAttributeAttribute(typeof(ShowInInlineEditorsAttribute), "Conditionals", "Only shows a property if it is drawn within an <see cref=\"InlineEditorAttribute\"/>.", false, "https://odininspector.com/attributes/show-in-inline-editors-attribute"),
            new OdinRegisterAttributeAttribute(typeof(ShowInInspectorAttribute), "Essentials", "ShowInInspector is used on any member, and shows the value in the inspector.\n\nKeep in mind that the ShowInInspector attribute will not serialize anything; meaning that any changes you make will not be saved with just the ShowInInspector attribute.\nAs a rule of thumb: Any field or property that isn't appearing in the inspector without the ShowInInspector attribute are not serialized.\n\nUse the Serialization Debugger to get a better overview of what is and what isn't serialized in your classes.", false, "https://odininspector.com/attributes/show-in-inspector-attribute"),
            new OdinRegisterAttributeAttribute(typeof(ShowPropertyResolverAttribute), "Debug", "ShowPropertyResolver shows the property resolver responsible for bringing the member into the property tree.\nThis is useful in situations where you want to debug why a particular member that is normally not shown in the inspector suddenly is.", false, "https://odininspector.com/attributes/show-property-resolver-attribute"),
            new OdinRegisterAttributeAttribute(typeof(SpaceAttribute), "Unity", null, false),
            new OdinRegisterAttributeAttribute(typeof(SuffixLabelAttribute), "Misc", "The SuffixLabel attribute draws a label at the end of a property.\nUse this for conveying intend about a property. Is the distance measured in meters, kilometers, or in light years?.\nIs the angle measured in degrees or radians?\n\nUsing SuffixLabel, you can place a neat label at the end of a property, to clearly indicate how the the property is used.", false, "https://odininspector.com/attributes/suffix-label-attribute"),
            new OdinRegisterAttributeAttribute(typeof(SuppressInvalidAttributeErrorAttribute), "Meta", "SuppressInvalidAttributeError is used on members to suppress the inspector error message you get when applying an attribute to a value that it's not supposed to work on.\n\nThis can be very useful for applying attributes to generic parameter values, when it only applies to some of the possible types that the value might become.", false, "https://odininspector.com/attributes/suppress-invalid-attribute-error-attribute"),
            new OdinRegisterAttributeAttribute(typeof(TabGroupAttribute), "Groups", "TabGroup is used on any property, and organizes properties into different tabs.\nUse this to organize different value to make a clean and easy to use inspector.", false, "https://odininspector.com/attributes/tab-group-attribute"),
            new OdinRegisterAttributeAttribute(typeof(TableColumnWidthAttribute), "Collections", "The TableColumnWidth attribute is used to further customize the width of a column in tables drawn using the <see cref=\"TableListAttribute\"/>.", false, "https://odininspector.com/attributes/table-column-width-attribute"),
            new OdinRegisterAttributeAttribute(typeof(TableListAttribute), "Type Specifics, Collections", "Renders lists and arrays in the inspector as tables.", false, "https://odininspector.com/attributes/table-list-attribute"),
            new OdinRegisterAttributeAttribute(typeof(TableMatrixAttribute), "Type Specifics, Collections", "The TableMatrix attribute is used to further specify how Odin should draw two-dimensional arrays.", false, "https://odininspector.com/attributes/table-matrix-attribute"),
            new OdinRegisterAttributeAttribute(typeof(TextAreaAttribute), "Unity", null, false),
            new OdinRegisterAttributeAttribute(typeof(TitleAttribute), "Essentials", "Title is used to make a bold header above a property.", false, "https://odininspector.com/attributes/title-attribute"),
            new OdinRegisterAttributeAttribute(typeof(TitleGroupAttribute), "Groups", "Groups properties vertically together with a title, an optional subtitle, and an optional horizontal line.", false, "https://odininspector.com/attributes/title-group-attribute"),
            new OdinRegisterAttributeAttribute(typeof(ToggleAttribute), "Type Specifics", "Toggle is used on any field or property, and allows to enable or disable the property in the inspector.\nUse this to create a property that can be turned off or on.", false, "https://odininspector.com/attributes/toggle-attribute"),
            new OdinRegisterAttributeAttribute(typeof(ToggleGroupAttribute), "Groups", "ToggleGroup is used on any field, and create a toggleable group of options.\nUse this to create options that can be enabled or disabled.", false, "https://odininspector.com/attributes/toggle-group-attribute"),
            new OdinRegisterAttributeAttribute(typeof(ToggleLeftAttribute), "Type Specifics", "Draws the checkbox before the label instead of after.", false, "https://odininspector.com/attributes/toggle-left-attribute"),
            new OdinRegisterAttributeAttribute(typeof(TypeFilterAttribute), "Essentials", null, false, "https://odininspector.com/attributes/type-filter-attribute"),
            new OdinRegisterAttributeAttribute(typeof(TypeInfoBoxAttribute), "Essentials", "The TypeInfoBox attribute adds an info box to the very top of a type in the inspector.\nUse this to add an info box to the top of a class in the inspector, without having to use neither the PropertyOrder nor the OnInspectorGUI attribute.", false, "https://odininspector.com/attributes/type-info-box-attribute"),
            new OdinRegisterAttributeAttribute(typeof(ValidateInputAttribute), "Essentials", "ValidateInput is used on any property, and allows to validate input from inspector.\nUse this to enforce correct values.", false, "https://odininspector.com/attributes/validate-input-attribute"),
            new OdinRegisterAttributeAttribute(typeof(ValueDropdownAttribute), "Essentials, Collections", "ValueDropdown is used on any property and creates a dropdown with configurable options.\nUse this to give the user a specific set of options to select from.", false, "https://odininspector.com/attributes/value-dropdown-attribute"),
            new OdinRegisterAttributeAttribute(typeof(VerticalGroupAttribute), "Groups", "VerticalGroup is used to gather properties together in a vertical group in the inspector.\nThis doesn't do much in and of itself, but in combination with other groups, such as <see cref=\"HorizontalGroupAttribute\"/> it can be very useful.", false, "https://odininspector.com/attributes/vertical-group-attribute"),
            new OdinRegisterAttributeAttribute(typeof(WrapAttribute), "Numbers", "Wrap is used on most primitive property, and allows for wrapping the value when it goes out of the defined range.\nUse this when you want a value that goes around in circle, like for example an angle.", false, "https://odininspector.com/attributes/wrap-attribute"),
        };
    }
}
#endif